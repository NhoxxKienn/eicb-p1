digraph {
node [shape=Mrecord, style=filled, fillcolor=white, fontname="Calibri"];
graph [ordering=out, nodesep=0.3, ranksep=1];

# SimpleNode VoidType
node0 [label="VoidType", tooltip="VoidType"]

# DeclarationLiteral main
node1 [shape=box, label="main", fillcolor="#cccccc", tooltip="main"]

# ReferenceLiteral foo
node2 [shape=box, label="foo", fillcolor="#cccccc", tooltip="foo"]

# Literal 1
node3 [shape=box, label="1", fillcolor="#cccccc", tooltip="1"]

# SimpleNode IntLiteral
node4:s -> node3:n
node4 [label="IntLiteral", tooltip="IntLiteral"]

# Literal 2
node5 [shape=box, label="2", fillcolor="#cccccc", tooltip="2"]

# SimpleNode IntLiteral
node6:s -> node5:n
node6 [label="IntLiteral", tooltip="IntLiteral"]

# Literal 3
node7 [shape=box, label="3", fillcolor="#cccccc", tooltip="3"]

# SimpleNode IntLiteral
node8:s -> node7:n
node8 [label="IntLiteral", tooltip="IntLiteral"]

# PortNode Call
node9:p0:s -> node2:n
node9:p1_0:s -> node4:n
node9:p1_1:s -> node6:n
node9:p1_2:s -> node8:n
node9 [label="{Call|{<p0>Function|{Arguments|{<p1_0>1|<p1_1>2|<p1_2>3}}}}", tooltip="Call"]

# PortNode CallStatement
node10:p0:s -> node9:n
node10 [label="{CallStatement|{<p0>CallExpr}}", tooltip="CallStatement"]

# PortNode Function
node11:p0:s -> node0:n
node11:p1:s -> node1:n
node11:p3_0:s -> node10:n
node11 [label="{Function|{<p0>ReturnType|<p1>Name|{Parameters|{}}|{Statements|{<p3_0>1}}}}", tooltip="Function"]

# SimpleNode IntType
node12 [label="IntType", tooltip="IntType"]

# DeclarationLiteral foo
node13 [shape=box, label="foo", fillcolor="#cccccc", tooltip="foo"]

# SimpleNode IntType
node14 [label="IntType", tooltip="IntType"]

# DeclarationLiteral a
node15 [shape=box, label="a", fillcolor="#cccccc", tooltip="a"]

# PortNode Param
node16:p0:s -> node14:n
node16:p1:s -> node15:n
node16 [label="{Param|{<p0>Type|<p1>Name}}", tooltip="Param"]

# SimpleNode IntType
node17 [label="IntType", tooltip="IntType"]

# DeclarationLiteral b
node18 [shape=box, label="b", fillcolor="#cccccc", tooltip="b"]

# PortNode Param
node19:p0:s -> node17:n
node19:p1:s -> node18:n
node19 [label="{Param|{<p0>Type|<p1>Name}}", tooltip="Param"]

# SimpleNode IntType
node20 [label="IntType", tooltip="IntType"]

# DeclarationLiteral c
node21 [shape=box, label="c", fillcolor="#cccccc", tooltip="c"]

# PortNode Param
node22:p0:s -> node20:n
node22:p1:s -> node21:n
node22 [label="{Param|{<p0>Type|<p1>Name}}", tooltip="Param"]

# ReferenceLiteral a
node23 [shape=box, label="a", fillcolor="#cccccc", tooltip="a"]

# SimpleNode Identifier
node24:s -> node23:n
node24 [label="Identifier", tooltip="Identifier"]

# ReferenceLiteral b
node25 [shape=box, label="b", fillcolor="#cccccc", tooltip="b"]

# SimpleNode Identifier
node26:s -> node25:n
node26 [label="Identifier", tooltip="Identifier"]

# PortNode Multiplication
node27:p0:s -> node24:n
node27:p1:s -> node26:n
node27 [label="{Multiplication|{<p0>Left|<p1>Right}}", tooltip="Multiplication"]

# ReferenceLiteral c
node28 [shape=box, label="c", fillcolor="#cccccc", tooltip="c"]

# SimpleNode Identifier
node29:s -> node28:n
node29 [label="Identifier", tooltip="Identifier"]

# PortNode Addition
node30:p0:s -> node27:n
node30:p1:s -> node29:n
node30 [label="{Addition|{<p0>Left|<p1>Right}}", tooltip="Addition"]

# PortNode Return
node31:p0:s -> node30:n
node31 [label="{Return|{<p0>Value}}", tooltip="Return"]

# PortNode Function
node32:p0:s -> node12:n
node32:p1:s -> node13:n
node32:p2_0:s -> node16:n
node32:p2_1:s -> node19:n
node32:p2_2:s -> node22:n
node32:p3_0:s -> node31:n
node32 [label="{Function|{<p0>ReturnType|<p1>Name|{Parameters|{<p2_0>1|<p2_1>2|<p2_2>3}}|{Statements|{<p3_0>1}}}}", tooltip="Function"]

# PortNode Module
node33:p1_0:s -> node11:n
node33:p1_1:s -> node32:n
node33 [label="{Module|{{Records|{}}|{Functions|{<p1_0>1|<p1_1>2}}}}", tooltip="Module"]

}
