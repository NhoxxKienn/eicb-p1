digraph {
node [shape=Mrecord, style=filled, fillcolor=white, fontname="Calibri"];
graph [ordering=out, nodesep=0.3, ranksep=1];

# SimpleNode VoidType
node0 [label="VoidType", tooltip="VoidType"]

# DeclarationLiteral main
node1 [shape=box, label="main", fillcolor="#cccccc", tooltip="main"]

# ReferenceLiteral a
node2 [shape=box, label="a", fillcolor="#cccccc", tooltip="a"]

# SimpleNode Identifier
node3:s -> node2:n
node3 [label="Identifier", tooltip="Identifier"]

# ReferenceLiteral b
node4 [shape=box, label="b", fillcolor="#cccccc", tooltip="b"]

# SimpleNode Identifier
node5:s -> node4:n
node5 [label="Identifier", tooltip="Identifier"]

# PortNode And
node6:p0:s -> node3:n
node6:p1:s -> node5:n
node6 [label="{And|{<p0>Left|<p1>Right}}", tooltip="And"]

# ReferenceLiteral printString
node7 [shape=box, label="printString", fillcolor="#cccccc", tooltip="printString"]

# Literal "foo"
node8 [shape=box, label="\"foo\"", fillcolor="#cccccc", tooltip="\"foo\""]

# SimpleNode StringLiteral
node9:s -> node8:n
node9 [label="StringLiteral", tooltip="StringLiteral"]

# PortNode Call
node10:p0:s -> node7:n
node10:p1_0:s -> node9:n
node10 [label="{Call|{<p0>Function|{Arguments|{<p1_0>1}}}}", tooltip="Call"]

# PortNode CallStatement
node11:p0:s -> node10:n
node11 [label="{CallStatement|{<p0>CallExpr}}", tooltip="CallStatement"]

# ReferenceLiteral printString
node12 [shape=box, label="printString", fillcolor="#cccccc", tooltip="printString"]

# Literal "baz"
node13 [shape=box, label="\"baz\"", fillcolor="#cccccc", tooltip="\"baz\""]

# SimpleNode StringLiteral
node14:s -> node13:n
node14 [label="StringLiteral", tooltip="StringLiteral"]

# PortNode Call
node15:p0:s -> node12:n
node15:p1_0:s -> node14:n
node15 [label="{Call|{<p0>Function|{Arguments|{<p1_0>1}}}}", tooltip="Call"]

# PortNode CallStatement
node16:p0:s -> node15:n
node16 [label="{CallStatement|{<p0>CallExpr}}", tooltip="CallStatement"]

# PortNode If
node17:p0:s -> node6:n
node17:p1:s -> node11:n
node17:p2:s -> node16:n
node17 [label="{If|{<p0>Condition|<p1>Then|<p2>Else}}", tooltip="If"]

# PortNode Function
node18:p0:s -> node0:n
node18:p1:s -> node1:n
node18:p3_0:s -> node17:n
node18 [label="{Function|{<p0>ReturnType|<p1>Name|{Parameters|{}}|{Statements|{<p3_0>1}}}}", tooltip="Function"]

# PortNode Module
node19:p1_0:s -> node18:n
node19 [label="{Module|{{Records|{}}|{Functions|{<p1_0>1}}}}", tooltip="Module"]

}
